/*<1>Only Strat*/
USE ACCOUNT ac_master;
STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.00);  } 
SELL{ WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.00);  } 
}

/*<2>white space*/
USE ACCOUNT ac_master;
STRATEGY hello          
{			
BUY { WHAT: SECURITY(    EQTY(	ZBRA))	.AMOUNT(85).PRICE(22.00);  } 
}		

/*Header test*/
/*<3>Missing account*/
STRATEGY hello          
{			
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.00);  } 
}		

/*<4>Account not found*/
USE ACCOUNT hi;
STRATEGY hello          
{			
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.00);  } 
}		

/*<5>USE DATAFEED*/
USE ACCOUNT ac_master;
USE DATAFEED df_ZBRA;
STRATEGY hello          
{			
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.00);  } 
}		

/*<6>DATAFEED NOT FOUND*/
USE ACCOUNT ac_master;
USE DATAFEED somedata;
STRATEGY hello          
{			
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.00);  } 
}		

/*<7>Multiple account*/
USE ACCOUNT ac_master;
USE ACCOUNT ac_master1;
USE DATAFEED df_ZBRA;
STRATEGY hello          
{			
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.00);  } 
}		

/*<8>Multiple datafeed*/
USE ACCOUNT ac_master;
USE DATAFEED df_ZBRA;
USE DATAFEED df_ZBRA1;
STRATEGY hello          
{			
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.00);  } 
}		

/*<9>Wrong Account*/
USE ACCOUNT ac_master1;
USE DATAFEED df_ZBRA;
STRATEGY hello          
{			
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.00);  } 
}		

/*<10>empty strategy*/
USE ACCOUNT ac_master;
USE DATAFEED df_ZBRA;
STRATEGY hello          
{			

}		

/*<11>long name*/
USE ACCOUNT ac_master;
USE DATAFEED df_ZBRA;
STRATEGY helloworld_to_all_of_my_team_this_is_really_a_long_name_zzzzzzzzzzzzzzz         
{			
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.00);  } 
}		


/*<12>'_' identifier*/
USE ACCOUNT ac_master;
STRATEGY helloworld
{
BUY { WHAT: SECURITY(EQTY(AA_PL)).AMOUNT(85).PRICE(22.44);  } 
SELL{ WHAT: SECURITY(EQTY(AA_PL)).AMOUNT(85).PRICE(22.44);  } 
}

/*<13>One line Strat*/
USE ACCOUNT ac_master;
STRATEGY helloworld{BUY { WHAT: SECURITY(EQTY(AAPL)).AMOUNT(85).PRICE(22.44);  } SELL{ WHAT: SECURITY(EQTY(AAPL)).AMOUNT(85).PRICE(22.44);  } }

/*<14> comments*/
USE ACCOUNT ac_master;
STRATEGY hello
{/*hello from comment*/
BUY { WHAT: SECURITY(EQTY(/*hello from comment*/AAPL)).AMOUNT(85).PRICE(22.00);  } 
/*
SELL{ WHAT: EQTY(AA).AMOUNT(85).PRICE(22.00);  } 
*/
}

/*<15>Multiple Strategy*/
USE ACCOUNT ac_master;
STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(AAPL)).AMOUNT(85).PRICE(22.44);  }
SELL { WHAT: SECURITY(EQTY(AAPL)).AMOUNT(85).PRICE(22.44);  }
}

STRATEGY hello1
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
SELL { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}

/*<16>statment in Strategy*/
USE ACCOUNT ac_master;
STRATEGY hello
{
CURRENCY p;
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}

/*<17>assignment statment*/
USE ACCOUNT ac_master;
STRATEGY hello
{
CURRENCY p;
p = 20;
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}

/*<18>assignment statment*/
USE ACCOUNT ac_master;
STRATEGY hello
{
CURRENCY p;
p = 20;
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}

/*<19>empty Algo*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY zbra)
{
}

STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}

/*<20>Only Algorithm*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY zbra)
{
}

/*<21>empty Algo parameter*/
USE ACCOUNT ac_master;
ALGORITHM al()
{
}
STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}


/*<22>Multiple algo*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY zbra)
{
}
ALGORITHM al1(CURRENCY zbra1)
{
}
STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}


/*<23>expr,expr;*/
/*also cause core dump*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY S) /*what types are accepted here!*/
{
	CURRENCY x;
	x = 10,x<50;
}
STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}


/*<24> Grammer error, We cannot have a algo with only variable decleration*/
/*also cause core dump*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY S) /*what types are accepted here!*/
{
	CURRENCY ST;
}

STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}


/*<25> Semantic check duplicate name*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY S) /*what types are accepted here!*/
{
	CURRENCY S;
}

STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}


/*<26> Semantic check reference before declare*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY S) /*what types are accepted here!*/
{
	CURRENCY S1;
	S2 = 1;
}

STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}

/*<27> Assignment semantic check*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY S) /*what types are accepted here!*/
{
	DOUBLE S1;
	S1 = 1;
}

STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}

/*<28> Assignment semantic check*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY S) /*what types are accepted here!*/
{
	INT S1;
	S1 = 1.1;
}

STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}


/*<29>semantic check*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY S) /*what types are accepted here!*/
{
	ACCOUNT S1;
	S1 < 1.1;
}

STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}

/*<30>semantic check*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY S) /*what types are accepted here!*/
{
	ACCOUNT S1;
	S1 < 1.1;
}

STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}



/*<31>semantic check*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY S) /*what types are accepted here!*/
{
	ACCOUNT S1;
	S1 OR 1;
}

STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}

/*<32>semantic check*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY S) /*what types are accepted here!*/
{
	TRUE IS NOT TRUE;
}

STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}

/*<33>semantic check*/
USE ACCOUNT ac_master;
ALGORITHM al(CURRENCY S) /*what types are accepted here!*/
{
	#S;
}

STRATEGY hello
{
BUY { WHAT: SECURITY(EQTY(ZBRA)).AMOUNT(85).PRICE(22.44);  }
}



/*<34>SET IF*/
USE ACCOUNT ac_master;
USE DATAFEED df_ZBRA;

ALGORITHM al_Buy_Something(DATAFEED quotes, CURRENCY #buy_price)
{
    SET  { buy_price = quotes.NEXT.PRC }
    IF:
    {
         quotes.NEXT.SEC IS EQTY(ZBRA)
         AND
         quotes.NEXT.PRC < 90.00
    }
}


STRATEGY my_buy_strat2
{

         BUY  {  WHAT : SECURITY( EQTY(ZBRA) ).AMOUNT(100).PRICE(11.11);}

}




























